import boto3
import datetime

def lambda_handler(event, context):
    # Initialize boto3 clients for EC2, RDS, and SNS
    ec2_client = boto3.client('ec2', region_name='us-east-1')
    rds_client = boto3.client('rds', region_name='us-east-1')
    sns_client = boto3.client('sns')
    
    # Get current date and time
    current_time = datetime.datetime.now(datetime.timezone.utc)
    
    # Get EC2 events
    ec2_events = ec2_client.describe_events(
        StartTime=current_time,
        Filters=[
            {'Name': 'event-status-code', 'Values': ['open', 'upcoming']}
        ]
    )
    
    # Get RDS events
    rds_events = rds_client.describe_events(
        StartTime=current_time,
        Filters=[
            {'Name': 'event-status', 'Values': ['open', 'upcoming']}
        ]
    )
    
    # Check if there are any open or upcoming events for EC2 instances
    ec2_affected_entities = []
    for event in ec2_events['Events']:
        ec2_affected_entities.extend(event.get('affectedEntities', []))
    
    # Check if there are any open or upcoming events for RDS instances
    rds_affected_entities = []
    for event in rds_events['Events']:
        rds_affected_entities.extend(event.get('eventCategories', []))
    
    # Combine affected entities from EC2 and RDS
    all_affected_entities = ec2_affected_entities + rds_affected_entities
    
    # Send SNS notification if there are any open or upcoming events
    if all_affected_entities:
        sns_topic_arn = 'YOUR_SNS_TOPIC_ARN'  # Replace with your SNS topic ARN
        sns_message = "Open or upcoming health events detected in us-east-1 region:\n"
        
        for entity in all_affected_entities:
            sns_message += f"- {entity}\n"
        
        sns_client.publish(
            TopicArn=sns_topic_arn,
            Message=sns_message,
            Subject="Open or Upcoming Health Events Detected"
        )
    
    return "Function execution completed."
